{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 When traversing the rows we are accessing elements of the matrix in the same order they are stored in memory. With a cache line that can hold 8 matrix elements, we would expect a hit rate of 7/8 (after we miss an element, the next 7 will be in cache).\
\
When the number of columns is greater than 7:\
When traversing the columns we are not accessing elements of the matrix that are adjacent in memory, and since matrix[i][j] is stored in memory more than 7 elements away from matrix[i][j+1] every element we access is a miss, so we have a hit rate of 0.\
\
When the number of columns is less than 8:\
The hit rate depends on the number of columns, with fewer columns yielding a better hit rate. For example if there are 4 columns, when we access matrix[0][0], we miss, but matrix of [0][1] is now in the cache, so we have a hit rate of approximately 1/2.\
But as long as the number of columns is greater than 1, the column hit rate will be less than the row hit rate.}